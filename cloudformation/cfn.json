{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description":"commercial-expiry-service",
  "Parameters":{
    "KeyName":{
      "Description":"The EC2 Key Pair to allow SSH access to the instance",
      "Type":"String",
      "Default":"composer-team"
    },
    "Stage":{
      "Description":"Environment name",
      "Type":"String",
      "AllowedValues":[ "PROD", "CODE"],
      "Default": "PROD"
    },
    "VpcId": {
      "Description": "ID of the VPC onto which to launch the application eg. vpc-1234abcd",
      "Type": "AWS::EC2::VPC::Id",
      "Default": "vpc-381fa95d"
    },
    "PublicVpcSubnets": {
      "Description": "Subnets to use in VPC for public internet-facing ELB eg. subnet-abcd1234",
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Default": "subnet-c3620fa6,subnet-2b37bd5c,subnet-3667c86f"
    },
    "PrivateVpcSubnets": {
      "Description": "Subnets to use in VPC for private EC2 instances eg. subnet-abcd1234",
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Default": "subnet-c2620fa7,subnet-2a37bd5d,subnet-2967c870"
    },
    "MachineImagesAMI": {
      "Description": "AMI id from the machine-images repo",
      "Type": "AWS::EC2::Image::Id"
    },
    "GuardianIP": {
      "Description": "Ip range for the office",
      "Type": "String",
      "Default": "77.91.248.0/21"
    },
    "VulnerabilityScanningSecurityGroup": {
      "Description": "Security group that grants access to the account's Vulnerability Scanner",
      "Type": "AWS::EC2::SecurityGroup::Id"
    }
  },

  "Resources":{

    "CommercialExpiryServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "ec2.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/"
      }
    },

    "CommercialExpiryServiceDescribeEC2Policy" : {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CommercialExpiryServiceDescribeEC2Policy",
        "PolicyDocument": {
          "Statement": [ {
            "Action": ["EC2:Describe*"],
            "Effect": "Allow",
            "Resource":"*"
          }]
        },
        "Roles": [ { "Ref": "CommercialExpiryServiceRole" } ]
      }
    },

    "CommercialExpiryServiceGetDistributablesPolicy" : {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CommercialExpiryServiceGetDistributablesPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [ "s3:GetObject" ],
              "Resource": [ "arn:aws:s3:::composer-dist/*" ]
            }
          ]
        },
        "Roles": [ { "Ref": "CommercialExpiryServiceRole" } ]
      }
    },

    "CommercialExpiryServiceGetConfigPolicy" : {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CommercialExpiryServiceGetConfigPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [ "s3:GetObject" ],
              "Resource": [ "arn:aws:s3:::guconf-flexible/commercial-expiry-service/*" ]
            }
          ]
        },
        "Roles": [ { "Ref": "CommercialExpiryServiceRole" } ]
      }
    },

    "CommercialExpiryServiceKinesisPolicy" : {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CommercialExpiryServiceKinesisPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [ "kinesis:*" ],
              "Resource": "*"
            }
          ]
        },
        "Roles": [ { "Ref": "CommercialExpiryServiceRole" } ]
      }
    },

    "CommercialExpiryServiceInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ {"Ref": "CommercialExpiryServiceRole"} ]
      }
    },

    "SSHSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow SSH access from the office",
        "VpcId": { "Ref": "VpcId" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "AppServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "commercial expiry service Application servers",
        "VpcId": { "Ref": "VpcId" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 9000,
            "ToPort": 9000,
            "CidrIp": {"Ref": "GuardianIP"}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 9000,
            "ToPort": 9000,
            "SourceSecurityGroupId": { "Ref": "LoadBalancerSecurityGroup" }
          }
        ]
      }
    },

    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "commercial expiry service application load balancer",
        "VpcId": {"Ref": "VpcId"},
        "SecurityGroupIngress": [
          { "IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "10.248.200.0/21" }
        ]
      }
    },

    "CommercialExpiryServiceLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "SecurityGroups": [{ "Fn::GetAtt": ["LoadBalancerSecurityGroup", "GroupId"] }],
        "CrossZone": true,
        "Subnets": { "Ref": "PrivateVpcSubnets" },
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : "9000",
          "Protocol" : "HTTP"
        }],

        "HealthCheck" : {
          "Target" : "HTTP:9000/management/healthcheck",
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "2",
          "Interval" : "10",
          "Timeout" : "5"
        },
        "Tags":[
          {
            "Key":"Stage",
            "Value":{
              "Ref":"Stage"
            }
          },
          {
            "Key": "Stack",
            "Value": "flexible"
          },
          {
            "Key":"App",
            "Value":"commercial-expiry-service"
          }
        ]
      }
    },


    "AutoscalingGroup":{
      "Type":"AWS::AutoScaling::AutoScalingGroup",
      "Properties":{
        "AvailabilityZones": { "Fn::GetAZs": "" },
        "VPCZoneIdentifier": { "Ref": "PrivateVpcSubnets" },
        "LaunchConfigurationName":{ "Ref":"CommercialExpiryServiceLaunchConfig" },
        "MinSize":"1",
        "MaxSize":"2",
        "DesiredCapacity": "1",
        "HealthCheckType" : "ELB",
        "HealthCheckGracePeriod": 300,
        "LoadBalancerNames" : [ { "Ref": "CommercialExpiryServiceLoadBalancer" }],
        "Tags":[
          {
            "Key":"Stage",
            "Value":{
              "Ref":"Stage"
            },
            "PropagateAtLaunch":"true"
          },
          {
            "Key": "Stack",
            "Value": "flexible",
            "PropagateAtLaunch": "true"
          },
          {
            "Key":"App",
            "Value":"commercial-expiry-service",
            "PropagateAtLaunch":"true"
          }
        ]
      }
    },

    "CommercialExpiryServiceLaunchConfig":{
      "Type":"AWS::AutoScaling::LaunchConfiguration",
      "Properties":{
        "KeyName":{ "Ref":"KeyName" },
        "ImageId":{ "Ref":"MachineImagesAMI" },
        "SecurityGroups": [
          { "Ref": "AppServerSecurityGroup" },
          { "Ref": "SSHSecurityGroup" },
          { "Ref": "VulnerabilityScanningSecurityGroup" }
        ],
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {"Ref": "CommercialExpiryServiceInstanceProfile"},
        "UserData":{
          "Fn::Base64":{
            "Fn::Join":["", [
              "#!/bin/bash -ev\n",
              "/opt/features/native-packager/install.sh -b composer-dist -t tgz -s\n"
            ]]
          }
        }
      }
    }
  }
}